;+
; :Author: max
;-date: 2018/12/19  


1 变量
  1.1 有自定义变量和系统变量两种；
  自定义变量：(1)开头第一个字符必须为英文(2)只能由字母，数字，下划线以及$组成(3)不能有空格(4)不区分大小写
  系统变量：以！开始，例如!PI 为圆周率Π
  1.2 数据类型，包括数字型数据类型和非数值型数据类型(都可以作为一维或者多维数组的元素)
  数值型类型包括byte(1字节),int(2字节),uint(2字节)，long(4字节)，ulong(4字节)，long64(8字节)，ulong64(8字节)，float(4字节)
  double(8字节)，complex(8字节)，dcomplex(16字节)
  非数值数据类型 string(0~32767个字符)，struct(结构体)，pointer(指针)，object(对象)，list(链表)，hash(哈希表)
  注意：变量不需要声明，也不需要定义类型
  1.3基本操作
  数据类型转化，注意高精度转为低精度注意越界。
  浮点型或者其他转为整形，注意使用fix()越界问题，常用函数
    round()四舍五入取整
    floor()去尾取整
    ceil()进一取整
2 数组
  2.1 定义数组 直接定义和函数定义(数组在IDL中先列后行)
  直接定义：a=[a,x],b=[[3,2,1],[4,3,2]]
  函数定义：有两种函数，一种是直接所有元素赋值为0，有bytarr(),intarr(),uintarr(),long64arr(),fltarr(),dblarr(),strarr()
  另一种是所有元素初始化为该元素在数组中的索引值(下标值)bindgen(),indgen(),lindgen(),findgen(),sindgen()\
  其他两种创建数组(1)创建所有值相同的数组result=replicate(value,d1,...,d8)
  (2)result=make_array([d1[d2,...,d8]],[dimension=vector][,value=value][,size=vector][,/index][,type=type_code])
  2.2 数组下标
   为了避免和函数混淆，数组访问一般用中括号[].
   (1)从idl 8.0开始，支持负下标，其中-1表示最后一个元素下标，a[-1]
   (2)向量访问，比如访问数组中第1，3，6，8元素，先定义数组b=[0,2,5,7],之后a[b]即可
   (3)访问数组中第10~12列，第9-10行元素，则可以a[9:11,8:9]
   (4)*提取某一列或者某一行数据，比如提取第四行数字，则a[*,3]